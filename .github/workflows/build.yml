name: 'Build and package extension'
on:
    push:
        branches:
            - main
        tags:
            - 'v*'

concurrency:
    group: ${{ github.ref }}
    cancel-in-progress: false

jobs:
    setup:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.get-package.outputs.version }}
            description: ${{ steps.get-package.outputs.description }}
            license: ${{ steps.get-package.outputs.license }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup node.js (v20)
              uses: actions/setup-node@v4
              with:
                  node-version: 20
            - name: Get package info
              id: get-package
              run: |
                  echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
                  echo "description=$(node -p "require('./package.json').description")" >> $GITHUB_OUTPUT
                  echo "license=$(node -p "require('./package.json').license")" >> $GITHUB_OUTPUT

    build:
        needs: setup
        permissions:
            contents: write
        runs-on: ubuntu-latest
        steps:
            - name: Checkout the repository
              uses: actions/checkout@v4

            - name: Cache pnpm modules
              uses: actions/cache@v4
              with:
                  path: ~/.pnpm-store
                  key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-

            - uses: pnpm/action-setup@v4
              with:
                  version: latest
                  run_install: true

            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: latest
                  cache: 'pnpm'

            - name: Setup Github env
              run: |
                  echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
                  echo "GITHUB_REF_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

            - name: Build the extension
              run: |
                  pnpm build --target=firefox
                  pnpm build --target=chrome

            - name: Package the extension into a zip artifact
              run: |
                  pnpm package --target=firefox
                  pnpm package --target=chrome

            - name: Rename the artifacts
              run: |
                  mv ./build/firefox-prod.zip ./build/shittruyen-bypass-firefox.zip
                  mv ./build/chrome-prod.zip ./build/shittruyen-bypass-chrome.zip

            - name: Setup release
              uses: yashanand1910/standard-release-notes@v1.2.1
              id: get_release_notes
              with:
                  changelog_path: ./CHANGELOG.md
                  version: ${{ needs.setup.outputs.version }}

            - name: Create a release
              id: create_release
              uses: actions/create-release@latest
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ needs.setup.outputs.version }}
                  release_name: v${{ needs.setup.outputs.version }}
                  body: |
                      ${{ steps.get_release_notes.outputs.release_notes }}
                  draft: false
                  prerelease: false

            - name: Upload the release assets
              id: upload-release-asset-firefox
              uses: actions/upload-release-asset@latest
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./build/shittruyen-bypass-firefox.zip
                  asset_name: shittruyen-bypass-firefox.zip
                  asset_content_type: application/zip

            - name: Upload the release assets
              id: upload-release-asset-chrome
              uses: actions/upload-release-asset@latest
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./build/shittruyen-bypass-chrome.zip
                  asset_name: shittruyen-bypass-chrome.zip
                  asset_content_type: application/zip
