name: 'Build and package extension'
on:
    push:
        branches:
            - main
        tags:
            - 'v*'

concurrency:
    group: ${{ github.ref }}
    cancel-in-progress: false

jobs:
    build:
        permissions:
            contents: write
        runs-on: ubuntu-latest
        steps:
            - name: Checkout the repository
              uses: actions/checkout@v4

            - name: Cache pnpm modules
              uses: actions/cache@v4
              with:
                  path: ~/.pnpm-store
                  key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-

            - uses: pnpm/action-setup@v4
              with:
                  version: latest
                  run_install: true

            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: latest
                  cache: 'pnpm'

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.10'

            - name: Extract changelog for the release
              id: changelog
              run: |
                  python -c "
                  import re
                  version = '${{ github.ref_name }}'
                  with open('CHANGELOG.md', 'r') as file:
                      changelog = file.read()
                  pattern = rf'## \[{version}\](.*?)\n## '
                  match = re.search(pattern, changelog, re.S)
                  if not match:
                      pattern = rf'## \[{version}\](.*?)$'
                      match = re.search(pattern, changelog, re.S)
                  if match:
                      print('::set-output name=body::' + match.group(1).strip())
                  else:
                      print('::set-output name=body::Không tìm thấy phiên bản trong CHANGELOG.md')
                  "

            - name: Build the extension
              run: |
                  pnpm build --target=firefox
                  pnpm build --target=chrome

            - name: Package the extension into a zip artifact
              run: |
                  pnpm package --target=firefox
                  pnpm package --target=chrome

            - name: Rename the artifacts
              run: |
                  mv ./build/firefox-prod.zip ./build/shittruyen-bypass-firefox.zip
                  mv ./build/chrome-prod.zip ./build/shittruyen-bypass-chrome.zip

            - name: Create a release
              id: create_release
              uses: actions/create-release@latest
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: v${{ github.ref }}
                  body: ${{ steps.changelog.outputs.body }}
                  draft: false
                  prerelease: false

            - name: Upload the release assets
              id: upload-release-asset-firefox
              uses: actions/upload-release-asset@latest
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./build/shittruyen-bypass-firefox.zip
                  asset_name: shittruyen-bypass-firefox.zip
                  asset_content_type: application/zip

            - name: Upload the release assets
              id: upload-release-asset-chrome
              uses: actions/upload-release-asset@latest
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./build/shittruyen-bypass-chrome.zip
                  asset_name: shittruyen-bypass-chrome.zip
                  asset_content_type: application/zip
